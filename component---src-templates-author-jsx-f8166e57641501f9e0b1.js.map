{"version":3,"sources":["webpack:///./src/components/AuthorImage/AuthorImage.jsx","webpack:///./src/components/AuthorMeta/AuthorMeta.jsx","webpack:///./src/components/AuthorLocation/AuthorLocation.jsx","webpack:///./src/components/AuthorWebsite/AuthorWebsite.jsx","webpack:///./src/components/AuthorProfile/AuthorProfile.jsx","webpack:///./src/components/AuthorName/AuthorName.jsx","webpack:///./src/components/AuthorBio/AuthorBio.jsx","webpack:///./src/components/AuthorStats/AuthorStats.jsx","webpack:///./src/templates/author.jsx"],"names":["AuthorImage","render","this","props","author","name","image","url","className","href","style","backgroundImage","React","Component","AuthorMeta","children","classes","classNames","AuthorLocation","location","AuthorWebsite","AuthorProfile","AuthorName","AuthorBio","bio","AuthorStats","postEdges","length","AuthorTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","closeMenu","openMenu","handleOnClose","setState","data","allMarkdownRemark","allAuthorsJson","pageContext","cover","edges","authorsEdges","getAuthor","node","Drawer","isOpen","title","config","siteTitle","Navigation","onClose","SiteWrapper","MainHeader","MainNav","BlogLogo","logo","siteLogo","MenuButton","navigation","siteNavigation","onClick","PostListing","postAuthors","SocialMediaIcons","urls","socialUrls","Footer","copyright","promoteGatsby"],"mappings":"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","file":"component---src-templates-author-jsx-f8166e57641501f9e0b1.js","sourcesContent":["import React from \"react\";\nimport \"./AuthorImage.css\";\n\nclass AuthorImage extends React.Component {\n  render() {\n    const {\n      author: { name, image, url }\n    } = this.props;\n    if (image) {\n      return (\n        <figure className=\"author-image\">\n          <a\n            className=\"img\"\n            href={url}\n            style={{ backgroundImage: `url(\"${image}\")` }}\n          >\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\n          </a>\n        </figure>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorImage;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorMeta.css\";\n\nclass AuthorMeta extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-meta\", className);\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default AuthorMeta;\n","import React from \"react\";\n\nclass AuthorLocation extends React.Component {\n  render() {\n    const { location } = this.props;\n    if (location) {\n      return <span className=\"author-location icon-location\">{location}</span>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLocation;\n","import React from \"react\";\n\nclass AuthorWebsite extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <span className=\"author-link icon-link\">\n          <a href={url}>{url}</a>\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorWebsite;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorProfile.css\";\n\nclass AuthorProfile extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-profile\", className);\n\n    return <section className={classes}>{children}</section>;\n  }\n}\n\nexport default AuthorProfile;\n","import React from \"react\";\nimport \"./AuthorName.css\";\n\nclass AuthorName extends React.Component {\n  render() {\n    const { name } = this.props;\n    if (name) {\n      return <h1 className=\"author-title\">{name}</h1>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorName;\n","import React from \"react\";\nimport \"./AuthorBio.css\";\n\nclass AuthorBio extends React.Component {\n  render() {\n    const { bio } = this.props;\n    if (bio) {\n      return <h2 className=\"author-bio\">{bio}</h2>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorBio;\n","import React from \"react\";\n\nclass AuthorStats extends React.Component {\n  render() {\n    const { postEdges } = this.props;\n    const getPostText = () => {\n      if (postEdges) {\n        return postEdges.length > 1\n          ? `${postEdges.length} posts`\n          : `${postEdges.length} post`;\n      }\n      return \"No posts\";\n    };\n    return (\n      <span className=\"author-stats\">\n        <i className=\"icon-stats\" />\n        {getPostText()}\n      </span>\n    );\n  }\n}\n\nexport default AuthorStats;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport MenuButton from \"../components/MenuButton/MenuButton\";\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\nimport AuthorProfile from \"../components/AuthorProfile/AuthorProfile\";\nimport AuthorName from \"../components/AuthorName/AuthorName\";\nimport AuthorBio from \"../components/AuthorBio/AuthorBio\";\nimport AuthorMeta from \"../components/AuthorMeta/AuthorMeta\";\nimport AuthorLocation from \"../components/AuthorLocation/AuthorLocation\";\nimport AuthorWebsite from \"../components/AuthorWebsite/AuthorWebsite\";\nimport AuthorStats from \"../components/AuthorStats/AuthorStats\";\nimport Footer from \"../components/Footer/Footer\";\nimport SocialMediaIcons from \"../components/SocialMediaIcons/SocialMediaIcons\";\nimport Layout from \"../components/layout\";\n\nclass AuthorTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    const { menuOpen } = this.state;\n    evt.stopPropagation();\n    if (menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const {\n      location,\n      data: { allMarkdownRemark, allAuthorsJson },\n      pageContext: { author, cover }\n    } = this.props;\n    const { menuOpen } = this.state;\n\n    const postEdges =\n      allMarkdownRemark && allMarkdownRemark.edges\n        ? allMarkdownRemark.edges\n        : [];\n    const authorsEdges =\n      allAuthorsJson && allAuthorsJson.edges ? allAuthorsJson.edges : [];\n    const getAuthor = () => authorsEdges[0].node;\n\n    return (\n      <Layout location={location}>\n        <Drawer className=\"author-template\" isOpen={menuOpen}>\n          <Helmet title={`About \"${author}\" | ${config.siteTitle}`} />\n\n          {/* The blog navigation links */}\n          <Navigation config={config} onClose={this.handleOnClose} />\n\n          <SiteWrapper>\n            <MainHeader className=\"author-head\" cover={cover}>\n              <MainNav>\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                <MenuButton\n                  navigation={config.siteNavigation}\n                  onClick={this.handleOnClick}\n                />\n              </MainNav>\n            </MainHeader>\n\n            <AuthorProfile className=\"inner\">\n              <AuthorImage author={getAuthor()} />\n              <AuthorName name={getAuthor().name} />\n              <AuthorBio bio={getAuthor().bio} />\n              <AuthorMeta>\n                <AuthorLocation location={getAuthor().location} />\n              </AuthorMeta>\n              <AuthorStats postEdges={postEdges} />\n            </AuthorProfile>\n\n            {/* PostListing component renders all the posts */}\n            <PostListing postEdges={postEdges} postAuthors={authorsEdges} />\n\n            {/* Social information here */}\n            <SocialMediaIcons urls={getAuthor().socialUrls} />\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query AuthorPage($author: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { author: { eq: $author } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            author\n          }\n        }\n      }\n    }\n    allAuthorsJson(filter: { uid: { eq: $author } }) {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n          location\n          socialUrls\n        }\n      }\n    }\n  }\n`;\n\nexport default AuthorTemplate;\n"],"sourceRoot":""}